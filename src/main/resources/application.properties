spring.application.name = working-box

# polynomes seperated by "-", coefficients seperated by ","
# <coefs 1>@<arg index 1>-<coefs 2>@<arg index 2>…
# 10., 20., 30. would be 10 + 20*x + 30*x^2
box.polynomes.coefficients = 0.

# calls of this box to remote other boxes
# <address 1>@<call at progression 1>,<address 2>@<call at …
box.remote.calls = http://localhost:8081@80,http://localhost:8082@80

## ENERGY RELATED PROPERTIES
# address of the remote service dedicated to aggregating energy
# data about services. Useful if peer-to-peer is disabled, or fails.
box.energy.call = http://localhost:5000/objectives

# enable "peer-to-peer" mode. More specifically, it creates a
# dedicated energy endpoint per service-endpoint that monitors and
# share energy consumption.
box.energy.peertopeer.enable = true

# before self-tuning args, the service monitors data to make reliable
# observation about energy consumption. It requires X calls before
# being satisfying. Internally this uses a bloom filter, hence the
# count may be "shared" between args with low probability depending on
# the number of args and the size of the bloom filter.
box.energy.threshold.before.self.tuning.args = 14

# self-tuning args must be lightweight. Energy awareness (i) discovers
# args by monitoring then (ii) keeps X significant args to increase
# quality of service when possible, decrease energy consumption when
# needed.
box.energy.max.local.data = 20

# set the number of different inputs to monitor as a factor of the
# number of inputs to keep locally.
box.energy.factor.localdatakept.differentdatamonitored = 10

# set the fairness factor to find a set of more balanced objectives at
# the cost of a less accurate global objective. Value must be set
# between 0 and 1; 0 favoring a global objective only, 1 favoring
# fairness only.
box.energy.fairness.factor = 0

## JAEGER TRACING
# opentracing.jaeger.udp-sender.host = 192.168.99.100
# opentracing.jaeger.udp-sender.port = 6831
opentracing.jaeger.http-sender.url = http://192.168.99.100:14268/api/traces
# opentracing.jaeger.probabilistic-sampler.sampling-rate = 0.01
opentracing.jaeger.log-spans = true
opentracing.jaeger.enable-b3-propagation = true